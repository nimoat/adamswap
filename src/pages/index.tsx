import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.less";
import React, { useState } from "react";
import favicon from "../assets/favicon.ico";
import logo from "../assets/logo.svg";
import { Button } from "antd";
import { SwapOutlined } from "@ant-design/icons";
import NumericInput from "../components/NumericInput";
import currencyMap from "@/components/currencyMap";
import type { Currency, CurrencyV } from "@/components/currencyMap";

export default function Home() {
  const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
    useState(false);
  const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

  const [swapPair, setSwapPair] = useState<[CurrencyV, CurrencyV]>([
    { ...currencyMap.ETH, value: "" },
    { value: "" },
  ]);

  const closeAll = () => {
    setIsNetworkSwitchHighlighted(false);
    setIsConnectHighlighted(false);
  };

  const onCurrencySelect = (currency: Currency, index: 0 | 1 = 0) => {
    console.log({ currency, swapPair, index });
    if (currency.symbol === swapPair[1 - index].symbol) {
      setSwapPair((sp) => {
        return [sp[1], sp[0]];
      });
    } else {
      setSwapPair((sp) => {
        sp[index] = { ...currency, value: sp[index].value };
        return [...sp];
      });
    }
  };

  const onClickOrder = () => {
    setSwapPair((sp) => {
      return [sp[1], sp[0]];
    });
  };

  return (
    <>
      <Head>
        <title>AdamSwap</title>
        <meta name="description" content="Generated by create-wc-dapp" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href={favicon.src} />
      </Head>
      <header>
        <div
          className={styles.backdrop}
          style={{
            opacity: isConnectHighlighted || isNetworkSwitchHighlighted ? 1 : 0,
          }}
        />
        <div className={styles.header}>
          <div className={styles.logo}>
            <Image src={logo.src} alt="EasySwap" height="32" width="203" />
          </div>
          <div className={styles.buttons}>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isNetworkSwitchHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-network-button />
            </div>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isConnectHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-button />
            </div>
          </div>
        </div>
      </header>
      <main className={styles.main}>
        <div className={styles.wrapper}>
          <div className={styles.container}>
            <div className={styles.title}>Swap</div>
            <NumericInput
              tip="Pay"
              index={0}
              swapPair={swapPair}
              onSelect={(e) => onCurrencySelect(e, 0)}
              onChange={(v) =>
                setSwapPair((sp) => [{ ...sp[0], value: v }, sp[1]])
              }
            />
            <div className={styles.divide}>
              <div className={styles.swapIcon} onClick={onClickOrder}>
                <SwapOutlined />
              </div>
            </div>
            <NumericInput
              tip="Receive"
              index={1}
              swapPair={swapPair}
              onSelect={(e) => onCurrencySelect(e, 1)}
              onChange={(v) =>
                setSwapPair((sp) => [sp[0], { ...sp[1], value: v }])
              }
            />
            <Button
              className="swap-primary-btn"
              type="primary"
              size="large"
              disabled={swapPair.some((sp) => !sp.symbol || !sp.value)}
            >
              {swapPair.some((sp) => !sp.symbol) ? "Select a token" : "Swap"}
            </Button>
          </div>
        </div>
      </main>
    </>
  );
}
